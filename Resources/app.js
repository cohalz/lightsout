// Generated by CoffeeScript 1.6.3
var barsizex, colorBackground, deviceHeight, deviceWidth, i, j, label, labelColor, lflag, n, pannelSize, stagenumber, title, view, _i, _j, _k, _l, _m, _n, _o, _p, _ref;

title = Ti.UI.createWindow({
  backgroundColor: "#ed8b9b"
});

colorBackground = title.backgroundColor;

title.orientationModes = [Ti.UI.PORTRAIT];

view = Ti.UI.createView();

n = 9;

lflag = 0;

stagenumber = 0;

deviceWidth = Ti.Platform.displayCaps.platformWidth;

deviceHeight = Ti.Platform.displayCaps.platformHeight;

pannelSize = deviceWidth / 3;

barsizex = 0;

switch (Ti.Platform.osname) {
  case 'iphone':
    barsizex = deviceWidth / 320;
    break;
  case 'ipad':
    barsizex = deviceWidth / 768;
}

labelColor = "#6CB7AB";

title.add(view);

title.open({
  fullscreen: true
});

label = new Array(n - 3);

for (i = _i = 0; 0 <= n ? _i < n : _i > n; i = 0 <= n ? ++_i : --_i) {
  label[i] = new Array(n);
}

for (i = _j = 0, _ref = n - 3; 0 <= _ref ? _j < _ref : _j > _ref; i = 0 <= _ref ? ++_j : --_j) {
  for (j = _k = 0; 0 <= n ? _k < n : _k > n; j = 0 <= n ? ++_k : --_k) {
    label[i][j] = Ti.UI.createLabel({
      flag: 0,
      text: "",
      color: labelColor,
      bottom: pannelSize * (3 - i),
      left: pannelSize * j,
      width: pannelSize,
      height: pannelSize,
      textAlign: "center",
      verticalAlign: "TEXT_VERTICAL_ALIGNMENT_CENTER",
      backgroundColor: "#eddd8b",
      borderWidth: pannelSize / 32,
      borderColor: colorBackground,
      font: {
        fontSize: pannelSize / 3,
        fontFamily: ""
      },
      wordWrap: false
    });
    view.add(label[i][j]);
  }
}

for (i = _l = 0; _l < 4; i = ++_l) {
  for (j = _m = 0; _m < 3; j = ++_m) {
    if (i !== 3) {
      label[i][j].text = 3 * i + j + 1;
    } else {
      label[i][j].setFont({
        fontSize: pannelSize / 2,
        fontFamily: "SimpleDirectionArrows"
      });
    }
  }
}

label[3][0].text = "b";

label[3][2].text = "n";

label[3][0].addEventListener('touchstart', function(e) {
  var k, _n, _results;
  if (label[0][0].text !== 1) {
    _results = [];
    for (j = _n = 0; _n < 3; j = ++_n) {
      _results.push((function() {
        var _o, _results1;
        _results1 = [];
        for (k = _o = 0; _o < 3; k = ++_o) {
          _results1.push(label[j][k].text -= 9);
        }
        return _results1;
      })());
    }
    return _results;
  }
});

label[3][2].addEventListener('touchstart', function(e) {
  var k, _n, _results;
  if (label[0][0].text !== 37) {
    _results = [];
    for (j = _n = 0; _n < 3; j = ++_n) {
      _results.push((function() {
        var _o, _results1;
        _results1 = [];
        for (k = _o = 0; _o < 3; k = ++_o) {
          _results1.push(label[j][k].text += 9);
        }
        return _results1;
      })());
    }
    return _results;
  }
});

for (i = _n = 0; _n < 3; i = ++_n) {
  label[5][i + 4].setFont({
    fontSize: pannelSize / 1.5,
    fontFamily: "SimpleDirectionArrows"
  });
}

label[5][4].text = "v";

label[5][5].text = "1";

label[5][6].text = "g";

/*a = 22.5
for i in [0...n]
  for j in [0...n]
    label[i][j].borderWidth *= a
    label[i][j].animate
      left:(pannelSize*a)*(j-2)-(label[i][j].borderWidth*a*3)
      top:(pannelSize*a)*(j-5)-(label[i][j].borderWidth*a*3)
      width:pannelSize*a
      height:pannelSize*a
      duration: 200
*/


Ti.API.info('aaaaa');

for (i = _o = 0; _o < 3; i = ++_o) {
  for (j = _p = 0; _p < 3; j = ++_p) {
    label[i][j].addEventListener('touchstart', function(e) {
      var k, l, _q, _r;
      if (this.text > 25) {
        return 1;
      }
      for (k = _q = 0; _q < 6; k = ++_q) {
        for (l = _r = 0; _r < 9; l = ++_r) {
          label[k][l].borderWidth = deviceWidth / 160;
          if (Ti.Platform.osname === "android") {
            label[k][l].left = (deviceWidth / 5) * (l - 3);
            label[k][l].bottom = (deviceWidth / 5) * (4 - k);
            label[k][l].width = deviceWidth / 5;
            label[k][l].height = deviceWidth / 5;
          } else {
            label[k][l].animate({
              left: (deviceWidth / 5) * (l - 3),
              bottom: (deviceWidth / 5) * (4 - k),
              width: deviceWidth / 5,
              height: deviceWidth / 5,
              duration: 200
            });
          }
        }
      }
      return Ti.include("stage" + this.text + ".js");
    });
  }
}
